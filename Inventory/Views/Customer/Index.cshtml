@{
    ViewData["Title"] = "Customer";
}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header card-header-icon card-header-rose">
                <div class="card-icon">
                    <i class="material-icons">assignment</i>
                </div>
                <h4 class="card-title ">@ViewData["Title"]</h4>
            </div>
            <div class="card-body">
                <div id="Customer"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            var crudServiceBaseUrl = "/Customer",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "/GetData",
                            dataType: "json"
                        },
                        update: {
                            url: crudServiceBaseUrl + "/Update",
                            dataType: "json"
                        },
                        destroy: {
                            url: crudServiceBaseUrl + "/Remove",
                            dataType: "json"
                        },
                        create: {
                            url: crudServiceBaseUrl + "/Insert",
                            dataType: "json"
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    requestEnd: function (e) {
                        if (e.response) {
                            if ((e.type === "create")) {
                                $.notify({
                                    message: 'Record has been successfully added',
                                }, {
                                        type: 'success',
                                        allow_dismiss: false
                                    })
                            }
                            if ((e.type === "destroy")) {
                                $.notify({
                                    message: 'Record has been successfully deleted',

                                }, {
                                        type: 'success',
                                        allow_dismiss: false
                                    })
                            }
                            if ((e.type === "update")) {
                                $.notify({
                                    message: 'Record has been successfully updated',

                                }, {
                                        type: 'success',
                                        allow_dismiss: false,
                                    })
                            }
                        }
                    },
                    batch: true,
                    pageSize: 20,
                    schema: {
                        model: {
                            id: "customerId",
                            fields: {
                                customerId: { editable: false, nullable: false, defaultValue: 0 },
                                customerName: { validation: { required: true } },
                                customerType: { defaultValue: { customerTypeId: 1, customerTypeName: "Default" } },
                                address: { validation: { required: true } },
                                phone: { validation: { required: false } },
                                city: { validation: { required: false } },
                                state: { validation: { required: false } },
                                zipCode: { validation: { required: false } },
                                email: { validation: { required: false } },
                                contactPerson: { validation: { required: false } },

                            }
                        }
                    }
                });

            $("#Customer").kendoGrid({
                dataSource: dataSource,
                pageable: true,
                resizable: true,
                sortable: true,
                height: 650,
                toolbar: ["create", "search"],
                columns: [
                    { field: "customerName", title: "Customer", width: "200px" },
                    { field: "customerType", title: "Customer Type", width: "180px", editor: dropDownEditor, template: "#=customerType.customerTypeName#" },
                    { field: "address", title: "Address", width: "250px" },
                    { field: "phone", title: "Phone", width: "150px" },
                    { field: "city", title: "City", width: "150px" },
                    { field: "state", title: "State", width: "150px" },
                    { field: "zipCode", title: "Zip", width: "150px" },
                    { field: "email", title: "Email Address", width: "150px" },
                    { field: "contactPerson", title: "Contact Person", width: "150px", },
                    { command: ["edit", "destroy"], title: "&nbsp;", width: "250px" }],
                editable: "popup"
            });

            function dropDownEditor(container, options) {
                debugger
                $('<input required name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        autoBind: false,
                        dataTextField: "customerTypeName",
                        dataValueField: "customerTypeId",
                        dataSource: {
                            type: "json",
                            transport: {
                                read: "/CustomerType/GetData"
                            }
                        }
                    });

            }

        });

    </script>
}


